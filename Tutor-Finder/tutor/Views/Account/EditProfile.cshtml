@model tutor.Models.EditProfileViewModel
@using tutor.Models
@using Microsoft.AspNet.Identity;
@{
    ViewBag.Title = "Edit Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var db = new ApplicationDbContext();
    var userId = User.Identity.GetUserId();
    var currentUser = db.Users.Where(a => a.Id == userId).FirstOrDefault();
}
<div class="container" style="margin-top:30px;">
    <div class="row">
        <h2>EditProfile</h2>

        @using (Html.BeginForm("EditProfile", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="alert alert-danger" id="error-div" style="display:none;">
                <span id="error-span">

                </span>
            </div>

            <div class="form-horizontal">
                <dv>
                    <h3 id="update-status">@ViewBag.Message</h3>
                </dv>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="mb-3">
                    <div class="col-md-3">
                        <img src="~/Uploads/@currentUser.Image" style="border-radius:50%;max-height:250px; max-width:400px;" />
                    </div>
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.Image, htmlAttributes: new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        <input type="file" accept="image/*" name="upload" id="account-image" class="form-control" />
                        @Html.ValidationMessageFor(m => m.Image, "", new { @class = "text-danger" })
                        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "form-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "form-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "form-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.CurrentPassword, htmlAttributes: new { @class = "form-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CurrentPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CurrentPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "form-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "form-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.About, htmlAttributes: new { @class = "form-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.About, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.About, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="mb-3">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }


    </div>
</div>

@section Scripts{
    <script>
        $(function () {
            $(document).ready(function () {
                if (!$("#update-status").text() == "") {
                    $("#update-status").addClass("alert alert-success");
                }
            });

            $("#save").click(function () {
                //Check if input is empty

                if ($("#account-image").val() == "") {
                    $("#error-div").fadeIn();
                    $("#error-span").append("Please choose Account Image");
                    return false;
                }
                //Check if image extenstion is valid
                var filename = document.getElementById("account-image").value;
                var extensionImg = filename.substr(filename.lastIndexOf('.') + 1);
                var validExtensions = ['jpg', 'png', 'gif', 'bmp', 'jpeg'];
                if ($.inArray(extensionImg, validExtensions) == -1) {
                    $("#error-div").fadeIn();
                    $("#error-span").text("Please choose a file with a valid image extension");
                    return false;
                }

                //Check if image size is valid < 2MB
                var FileSize = document.getElementById("account-image").files[0].size / 1024 / 1024;
                if (FileSize > 2) {
                    $("#error-div").fadeIn();
                    $("#error-span").text("Please choose an account image with size less than 2MB");
                    return false;
                }
            });


        });
    </script>
}